#include "headl.h" 
class Solution {
public:
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        stack<int> ans;
        int i = 0;
        while (i < nums.size())
        {

            if (ans.empty()) ans.push(nums[i]);
            else
            {

                if (nums[i] == 121)
                {
                    int gogogogo = 1;

                }
                int v = ans.top();
                int k = gcd(v, nums[i]);
                int ov;
                int ok;
                if (k != 1)
                {
                    long long gogo = -1;
                    while (k != 1)
                    {
                        ov = ans.top();
                        ok = k;
                        long long tmp = (gogo == -1) ? (long long)ov * (long long)nums[i] / (long long)ok : (long long)ov * (long long)gogo / (long long)ok;
                        if (tmp > gogo) gogo = tmp;
                        ans.pop();
                        if (ans.empty()) break;
                        k = gcd(ans.top(), gogo);
                    }
                    ans.push(gogo);
                }
                else
                {
                    ans.push(nums[i]);
                }
            }
            i++;
        }
        vector<int> ans2;
        while (not ans.empty())
        {
            ans2.push_back(ans.top());
            ans.pop();
        }
        reverse(ans2.begin(), ans2.end());
        return ans2;
    }
    int gcd(int a, int b) {
        int r;
        while (b > 0) {
            r = a % b;
            a = b;
            b = r;
        }
        return a;
    }
};
int main()
{
    freopen("test_in.txt", "r", stdin);
    freopen("test_out.txt", "w", stdout);
    Solution* a = new Solution();
    vector<int> b = { 13981,11,25,10535,19565,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,19379,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,72977,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,2269,33533,155,145,4205,4495,725,29,29,145,25,725,5,145,5,5,155,155,5,5,5,1121,1121,59,59,59,361,19,19,19,1121,19,361,1121,1121,361,361,19,19,80246,4,2,2,2,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,37717,4042,86,2,172,86,4042,4042,172,3698,172,2,172,86,2,172,43,1849,3698,13,121,143,143,11,11,11,143,143,93,31,31,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797,44797 };
    a->replaceNonCoprimes(b);

}
